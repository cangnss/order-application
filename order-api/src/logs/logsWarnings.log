{
  meta: {
    req: {
      url: '/api/customer/asdasdsa',
      headers: {
        'user-agent': 'PostmanRuntime/7.37.0',
        accept: '*/*',
        'postman-token': '66f7940c-4faa-420b-93b8-5919d23d9b4f',
        host: 'localhost:3005',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/asdasdsa',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/asdasdsa',
  timestamp: '2024-03-24T14:07:30.394Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        connection: 'close',
        'accept-encoding': 'gzip, deflate, br',
        host: 'localhost:3000',
        'postman-token': 'f832dcd3-bf8b-4998-9def-5219e554412a',
        accept: '*/*',
        'user-agent': 'PostmanRuntime/7.37.0'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 46
  },
  level: 'error',
  message: 'HTTP GET /api/orders',
  timestamp: '2024-03-26T08:04:57.810Z'
}
{
  meta: {
    req: {
      url: '/customer',
      headers: {
        connection: 'close',
        'accept-encoding': 'gzip, deflate, br',
        host: 'localhost:3000',
        'postman-token': '5c1e8f66-af2d-4e86-b22e-136cef099b65',
        accept: '*/*',
        'user-agent': 'PostmanRuntime/7.37.0'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/customer',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP GET /customer',
  timestamp: '2024-03-26T08:08:50.119Z'
}
{
  meta: {
    req: {
      url: '/api/order',
      headers: {
        host: '127.0.0.1:49997',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/order',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP POST /api/order',
  timestamp: '2024-03-28T16:01:15.746Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:50063',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T16:01:15.799Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:50071',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T16:01:15.825Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:50075',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T16:01:15.838Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:50079',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T16:01:15.850Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:50085',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T16:01:15.866Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:49994',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 129
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T16:01:15.871Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:50089',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T16:01:15.883Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:50133',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T16:04:08.064Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:50135',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T16:04:08.069Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:50145',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T16:04:08.093Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:50148',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T16:04:08.101Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:50153',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T16:04:08.111Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:50157',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T16:04:08.118Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:50127',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 111
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T16:04:08.144Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:50125',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 135
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:04:08.153Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:50165',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T16:04:08.175Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:50167',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/address/undefined',
  timestamp: '2024-03-28T16:04:08.179Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:50169',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T16:04:08.188Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:50171',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T16:04:08.194Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:50173',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/undefined',
  timestamp: '2024-03-28T16:04:08.198Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:50175',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T16:04:08.203Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:50177',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/undefined',
  timestamp: '2024-03-28T16:04:08.207Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:50163',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2692
  },
  level: 'error',
  message: 'HTTP GET /api/orders',
  timestamp: '2024-03-28T16:04:10.863Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:50179',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T16:04:10.870Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:50181',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T16:04:10.873Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:50183',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:04:10.885Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:50185',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T16:04:10.890Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:50187',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T16:04:10.894Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:50189',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T16:04:10.899Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:50191',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T16:04:10.903Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:50341',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 6
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T16:15:17.790Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:50348',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T16:15:17.812Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:50350',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T16:15:17.815Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:50358',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T16:15:17.832Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:50360',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T16:15:17.837Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:50366',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T16:15:17.854Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:50334',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 125
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T16:15:17.888Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:50337',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 133
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:15:17.923Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:50372',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T16:15:17.927Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:50374',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/address/undefined',
  timestamp: '2024-03-28T16:15:17.931Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:50377',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T16:15:17.944Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:50380',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T16:15:17.951Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:50382',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/undefined',
  timestamp: '2024-03-28T16:15:17.956Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:50384',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T16:15:17.960Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:50386',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/undefined',
  timestamp: '2024-03-28T16:15:17.964Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:50376',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2688
  },
  level: 'error',
  message: 'HTTP GET /api/orders',
  timestamp: '2024-03-28T16:15:20.631Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:50390',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T16:15:20.638Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:50392',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T16:15:20.641Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:50394',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:15:20.650Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:50396',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T16:15:20.655Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:50398',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T16:15:20.658Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:50400',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T16:15:20.662Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:50402',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T16:15:20.666Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:50491',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T16:36:30.479Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:50498',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T16:36:30.497Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:50500',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T16:36:30.501Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:50508',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T16:36:30.517Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:50510',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T16:36:30.519Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:50516',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T16:36:30.537Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:50481',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 119
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T16:36:30.556Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:50486',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 121
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:36:30.583Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:50522',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T16:36:30.584Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:50524',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/address/undefined',
  timestamp: '2024-03-28T16:36:30.588Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:50527',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T16:36:30.597Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:50530',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T16:36:30.603Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:50534',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/undefined',
  timestamp: '2024-03-28T16:36:30.608Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:50532',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T16:36:30.609Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:50536',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T16:36:30.612Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:50537',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T16:36:30.613Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:50540',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/undefined',
  timestamp: '2024-03-28T16:36:30.617Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:50542',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:36:30.623Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:50544',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T16:36:30.629Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:50546',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T16:36:30.632Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:50548',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T16:36:30.638Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:50550',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T16:36:30.642Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:50902',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T16:37:26.181Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:50903',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T16:37:26.180Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:50917',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T16:37:26.199Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:50919',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T16:37:26.201Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:50925',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T16:37:26.215Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:50927',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T16:37:26.217Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:50901',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 106
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T16:37:26.300Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:50904',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 111
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:37:26.307Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:50936',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T16:37:26.325Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:50939',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/address/undefined',
  timestamp: '2024-03-28T16:37:26.329Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:50941',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T16:37:26.332Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:50945',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T16:37:26.336Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:50943',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T16:37:26.345Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:50947',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:37:26.348Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:50949',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T16:37:26.353Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:50951',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T16:37:26.355Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:50953',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/undefined',
  timestamp: '2024-03-28T16:37:26.357Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:50955',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T16:37:26.363Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:50957',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T16:37:26.363Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:50959',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/undefined',
  timestamp: '2024-03-28T16:37:26.368Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:50960',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T16:37:26.368Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:50963',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T16:37:26.371Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:51106',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 65
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:41:01.950Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:51108',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP GET /api/orders',
  timestamp: '2024-03-28T16:41:01.970Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:51110',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T16:41:01.979Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:51112',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T16:41:01.983Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:51114',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:41:01.992Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:51116',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T16:41:02.008Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:51118',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T16:41:02.021Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:51120',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: 'error',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T16:41:02.027Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:51122',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T16:41:02.033Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51131',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:41:25.530Z'
}
{
  meta: {
    req: {
      url: '/api/products',
      headers: {
        host: '127.0.0.1:51132',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/products',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 50
  },
  level: 'error',
  message: 'HTTP POST /api/products',
  timestamp: '2024-03-28T16:41:25.578Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:51130',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 50
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T16:41:25.578Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:51140',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP GET /api/address',
  timestamp: '2024-03-28T16:41:25.601Z'
}
{
  meta: {
    req: {
      url: '/api/products',
      headers: {
        host: '127.0.0.1:51141',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP GET /api/products',
  timestamp: '2024-03-28T16:41:25.603Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51136',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 49
  },
  level: 'error',
  message: 'HTTP GET /api/customer',
  timestamp: '2024-03-28T16:41:25.603Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:51144',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T16:41:25.611Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:51146',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T16:41:25.612Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51147',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T16:41:25.614Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:51150',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/address/undefined',
  timestamp: '2024-03-28T16:41:25.616Z'
}
{
  meta: {
    req: {
      url: '/api/products/undefined',
      headers: {
        host: '127.0.0.1:51152',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/products/undefined',
  timestamp: '2024-03-28T16:41:25.617Z'
}
{
  meta: {
    req: {
      url: '/api/customer/undefined',
      headers: {
        host: '127.0.0.1:51154',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/undefined',
  timestamp: '2024-03-28T16:41:25.619Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:51156',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T16:41:25.628Z'
}
{
  meta: {
    req: {
      url: '/api/products',
      headers: {
        host: '127.0.0.1:51158',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/products',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/products',
  timestamp: '2024-03-28T16:41:25.629Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51160',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:41:25.629Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:51137',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 66
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:41:25.634Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51165',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 0
  },
  level: 'error',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T16:41:25.636Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:51162',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: 'error',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T16:41:25.636Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:51163',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T16:41:25.637Z'
}
{
  meta: {
    req: {
      url: '/api/customer/undefined',
      headers: {
        host: '127.0.0.1:51168',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/undefined',
  timestamp: '2024-03-28T16:41:25.641Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:51169',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/undefined',
  timestamp: '2024-03-28T16:41:25.641Z'
}
{
  meta: {
    req: {
      url: '/api/products/undefined',
      headers: {
        host: '127.0.0.1:51172',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/undefined',
  timestamp: '2024-03-28T16:41:25.643Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51174',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: 'error',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T16:41:25.646Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:51178',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T16:41:25.651Z'
}
{
  meta: {
    req: {
      url: '/api/customer/undefined',
      headers: {
        host: '127.0.0.1:51180',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/undefined',
  timestamp: '2024-03-28T16:41:25.652Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:51175',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T16:41:25.653Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:51186',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/undefined',
  timestamp: '2024-03-28T16:41:25.658Z'
}
{
  meta: {
    req: {
      url: '/api/products/undefined',
      headers: {
        host: '127.0.0.1:51183',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/undefined',
  timestamp: '2024-03-28T16:41:25.660Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:51181',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 6
  },
  level: 'error',
  message: 'HTTP GET /api/orders',
  timestamp: '2024-03-28T16:41:25.663Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:51188',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: 'error',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T16:41:25.671Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:51190',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T16:41:25.677Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:51192',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 6
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:41:25.691Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:51194',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T16:41:25.699Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:51196',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T16:41:25.707Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:51198',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T16:41:25.712Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:51200',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T16:41:25.716Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51333',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:42:10.076Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51337',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 48
  },
  level: 'error',
  message: 'HTTP GET /api/customer',
  timestamp: '2024-03-28T16:42:10.148Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51343',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T16:42:10.158Z'
}
{
  meta: {
    req: {
      url: '/api/customer/undefined',
      headers: {
        host: '127.0.0.1:51345',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/undefined',
  timestamp: '2024-03-28T16:42:10.163Z'
}
{
  meta: {
    req: {
      url: '/api/products',
      headers: {
        host: '127.0.0.1:51335',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/products',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 56
  },
  level: 'error',
  message: 'HTTP POST /api/products',
  timestamp: '2024-03-28T16:42:10.162Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:51336',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 61
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T16:42:10.167Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51347',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:42:10.173Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:51338',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 57
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:42:10.171Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51349',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: 'error',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T16:42:10.179Z'
}
{
  meta: {
    req: {
      url: '/api/customer/undefined',
      headers: {
        host: '127.0.0.1:51352',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/undefined',
  timestamp: '2024-03-28T16:42:10.184Z'
}
{
  meta: {
    req: {
      url: '/api/products',
      headers: {
        host: '127.0.0.1:51350',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP GET /api/products',
  timestamp: '2024-03-28T16:42:10.187Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51358',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 0
  },
  level: 'error',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T16:42:10.188Z'
}
{
  meta: {
    req: {
      url: '/api/customer/undefined',
      headers: {
        host: '127.0.0.1:51360',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/undefined',
  timestamp: '2024-03-28T16:42:10.192Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:51354',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 5
  },
  level: 'error',
  message: 'HTTP GET /api/address',
  timestamp: '2024-03-28T16:42:10.192Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:51363',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T16:42:10.196Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:51356',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP GET /api/orders',
  timestamp: '2024-03-28T16:42:10.196Z'
}
{
  meta: {
    req: {
      url: '/api/products/undefined',
      headers: {
        host: '127.0.0.1:51366',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/products/undefined',
  timestamp: '2024-03-28T16:42:10.200Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:51365',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T16:42:10.201Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:51369',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T16:42:10.206Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:51372',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/address/undefined',
  timestamp: '2024-03-28T16:42:10.207Z'
}
{
  meta: {
    req: {
      url: '/api/products',
      headers: {
        host: '127.0.0.1:51371',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/products',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/products',
  timestamp: '2024-03-28T16:42:10.210Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:51375',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T16:42:10.211Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:51378',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T16:42:10.218Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:51377',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T16:42:10.218Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:51381',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 5
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:42:10.224Z'
}
{
  meta: {
    req: {
      url: '/api/products/undefined',
      headers: {
        host: '127.0.0.1:51383',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/undefined',
  timestamp: '2024-03-28T16:42:10.225Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:51384',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T16:42:10.228Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:51388',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T16:42:10.233Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:51387',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T16:42:10.233Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:51391',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/undefined',
  timestamp: '2024-03-28T16:42:10.237Z'
}
{
  meta: {
    req: {
      url: '/api/products/undefined',
      headers: {
        host: '127.0.0.1:51393',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/undefined',
  timestamp: '2024-03-28T16:42:10.238Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:51395',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T16:42:10.243Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:51396',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T16:42:10.244Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:51401',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/undefined',
  timestamp: '2024-03-28T16:42:10.248Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:51399',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T16:42:10.250Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:51403',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T16:42:10.254Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51624',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:43:35.862Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:51622',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 52
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T16:43:35.910Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:51621',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 53
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:43:35.909Z'
}
{
  meta: {
    req: {
      url: '/api/products',
      headers: {
        host: '127.0.0.1:51627',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/products',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 61
  },
  level: 'error',
  message: 'HTTP POST /api/products',
  timestamp: '2024-03-28T16:43:35.928Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51629',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 65
  },
  level: 'error',
  message: 'HTTP GET /api/customer',
  timestamp: '2024-03-28T16:43:35.950Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:51631',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 7
  },
  level: 'error',
  message: 'HTTP GET /api/address',
  timestamp: '2024-03-28T16:43:35.954Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:51632',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 5
  },
  level: 'error',
  message: 'HTTP GET /api/orders',
  timestamp: '2024-03-28T16:43:35.958Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51635',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 7
  },
  level: 'error',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T16:43:35.967Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:51637',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T16:43:35.967Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:51640',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T16:43:35.974Z'
}
{
  meta: {
    req: {
      url: '/api/customer/undefined',
      headers: {
        host: '127.0.0.1:51643',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/undefined',
  timestamp: '2024-03-28T16:43:35.974Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:51645',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/address/undefined',
  timestamp: '2024-03-28T16:43:35.975Z'
}
{
  meta: {
    req: {
      url: '/api/products',
      headers: {
        host: '127.0.0.1:51639',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 5
  },
  level: 'error',
  message: 'HTTP GET /api/products',
  timestamp: '2024-03-28T16:43:35.978Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:51647',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T16:43:35.984Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51649',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:43:35.985Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:51652',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T16:43:35.990Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:51650',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 5
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T16:43:35.990Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51655',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: 'error',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T16:43:35.992Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:51656',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 5
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T16:43:35.996Z'
}
{
  meta: {
    req: {
      url: '/api/products/undefined',
      headers: {
        host: '127.0.0.1:51659',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/products/undefined',
  timestamp: '2024-03-28T16:43:35.997Z'
}
{
  meta: {
    req: {
      url: '/api/customer/undefined',
      headers: {
        host: '127.0.0.1:51661',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/undefined',
  timestamp: '2024-03-28T16:43:36.001Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:51662',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T16:43:36.004Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:51665',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T16:43:36.005Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51669',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 0
  },
  level: 'error',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T16:43:36.006Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:51671',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/undefined',
  timestamp: '2024-03-28T16:43:36.010Z'
}
{
  meta: {
    req: {
      url: '/api/products',
      headers: {
        host: '127.0.0.1:51667',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '51',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/products',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP POST /api/products',
  timestamp: '2024-03-28T16:43:36.011Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:51673',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T16:43:36.011Z'
}
{
  meta: {
    req: {
      url: '/api/customer/undefined',
      headers: {
        host: '127.0.0.1:51674',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/undefined',
  timestamp: '2024-03-28T16:43:36.012Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:51677',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T16:43:36.019Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:51678',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T16:43:36.019Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:51680',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T16:43:36.020Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:51683',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/undefined',
  timestamp: '2024-03-28T16:43:36.025Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:51686',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T16:43:36.026Z'
}
{
  meta: {
    req: {
      url: '/api/products/undefined',
      headers: {
        host: '127.0.0.1:51684',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/undefined',
  timestamp: '2024-03-28T16:43:36.026Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:51689',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T16:43:36.037Z'
}
{
  meta: {
    req: {
      url: '/api/products/undefined',
      headers: {
        host: '127.0.0.1:51691',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/undefined',
  timestamp: '2024-03-28T16:43:36.043Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51703',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:45:03.159Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51705',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 27
  },
  level: 'error',
  message: 'HTTP GET /api/customer',
  timestamp: '2024-03-28T16:45:03.200Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51707',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 8
  },
  level: 'error',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T16:45:03.215Z'
}
{
  meta: {
    req: {
      url: '/api/customer/undefined',
      headers: {
        host: '127.0.0.1:51709',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/undefined',
  timestamp: '2024-03-28T16:45:03.220Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51711',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 0
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:45:03.228Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51713',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: 'error',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T16:45:03.233Z'
}
{
  meta: {
    req: {
      url: '/api/customer/undefined',
      headers: {
        host: '127.0.0.1:51715',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/undefined',
  timestamp: '2024-03-28T16:45:03.239Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51717',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: 'error',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T16:45:03.244Z'
}
{
  meta: {
    req: {
      url: '/api/customer/undefined',
      headers: {
        host: '127.0.0.1:51719',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/undefined',
  timestamp: '2024-03-28T16:45:03.249Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51725',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:45:26.770Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51727',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 19
  },
  level: 'error',
  message: 'HTTP GET /api/customer',
  timestamp: '2024-03-28T16:45:26.817Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51729',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 9
  },
  level: 'error',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T16:45:26.842Z'
}
{
  meta: {
    req: {
      url: '/api/customer/undefined',
      headers: {
        host: '127.0.0.1:51731',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/undefined',
  timestamp: '2024-03-28T16:45:26.850Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51733',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 0
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:45:26.860Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51735',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 1
  },
  level: 'error',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T16:45:26.868Z'
}
{
  meta: {
    req: {
      url: '/api/customer/undefined',
      headers: {
        host: '127.0.0.1:51737',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/undefined',
  timestamp: '2024-03-28T16:45:26.875Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51739',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 0
  },
  level: 'error',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T16:45:26.881Z'
}
{
  meta: {
    req: {
      url: '/api/customer/undefined',
      headers: {
        host: '127.0.0.1:51741',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/undefined',
  timestamp: '2024-03-28T16:45:26.886Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51749',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:46:16.085Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51771',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:49:38.282Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51776',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:50:05.137Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51787',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:50:44.038Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51792',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 18
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:51:15.676Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51796',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:52:07.532Z'
}
{
  meta: {
    req: {
      url: '/api/customer',
      headers: {
        host: '127.0.0.1:51810',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '42',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/customer',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 2
  },
  level: 'error',
  message: 'HTTP POST /api/customer',
  timestamp: '2024-03-28T16:54:07.240Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51832',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T16:55:52.705Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51838',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T16:55:52.751Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:51842',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T16:55:52.786Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:52009',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T17:06:34.162Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:52010',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T17:06:34.162Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:52021',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T17:06:34.187Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:52022',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T17:06:34.188Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:52029',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T17:06:34.222Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:52033',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T17:06:34.239Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:52003',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 155
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T17:06:34.284Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:52001',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 171
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:06:34.296Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:52040',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T17:06:34.311Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:52043',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/address/undefined',
  timestamp: '2024-03-28T17:06:34.314Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52045',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:06:34.321Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:52049',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T17:06:34.326Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:52047',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 5
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T17:06:34.326Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:52051',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T17:06:34.333Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:52055',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/undefined',
  timestamp: '2024-03-28T17:06:34.338Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:52057',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T17:06:34.344Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52058',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:06:34.345Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:52061',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/undefined',
  timestamp: '2024-03-28T17:06:34.349Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:52062',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '90',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T17:06:34.349Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52065',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:06:34.355Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:52067',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T17:06:34.359Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:52131',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 68
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T17:09:32.922Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:52135',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T17:09:32.942Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:52137',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/address/undefined',
  timestamp: '2024-03-28T17:09:32.947Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:52139',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 6
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T17:09:32.960Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:52141',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T17:09:32.968Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:52143',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '109',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/undefined',
  timestamp: '2024-03-28T17:09:32.973Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:52145',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T17:09:32.979Z'
}
{
  meta: {
    req: {
      url: '/api/address/undefined',
      headers: {
        host: '127.0.0.1:52147',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/undefined',
  timestamp: '2024-03-28T17:09:32.987Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:52223',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T17:12:37.446Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:52229',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '110',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T17:12:37.465Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:52233',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T17:12:37.481Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:52320',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '91',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 70
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:15:08.067Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52324',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:15:08.088Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:52326',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T17:15:08.093Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52330',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:15:08.109Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:52332',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T17:15:08.115Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52334',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:15:08.121Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:52336',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T17:15:08.126Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52349',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:15:37.301Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52355',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '93',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:15:37.322Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52359',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:15:37.342Z'
}
{
  meta: {
    req: {
      url: '/api/orders/26',
      headers: {
        host: '127.0.0.1:52361',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/26',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 48
  },
  level: 'error',
  message: 'HTTP DELETE /api/orders/26',
  timestamp: '2024-03-28T17:15:37.395Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52384',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:16:09.754Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52390',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '93',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:16:09.774Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52394',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:16:09.794Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:52408',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 69
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:16:21.238Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52412',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:16:21.265Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:52414',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T17:16:21.270Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:52416',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 10
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:16:21.287Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52418',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:16:21.293Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:52420',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T17:16:21.299Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52422',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:16:21.305Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:52424',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T17:16:21.310Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:52467',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T17:18:04.755Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:52473',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T17:18:04.778Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:52477',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T17:18:04.795Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:52515',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T17:20:25.722Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:52521',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T17:20:25.743Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:52525',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T17:20:25.758Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:52543',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T17:20:44.373Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:52549',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T17:20:44.394Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:52553',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T17:20:44.411Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:52568',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T17:20:53.155Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:52574',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '110',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T17:20:53.175Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:52578',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T17:20:53.192Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:52591',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 63
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:21:03.392Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52595',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:21:03.420Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:52597',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T17:21:03.425Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52601',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:21:03.449Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:52603',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T17:21:03.457Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:52605',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:21:03.465Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:52607',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T17:21:03.473Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:52758',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 67
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T17:25:32.014Z'
}
{
  meta: {
    req: {
      url: '/api/address',
      headers: {
        host: '127.0.0.1:52955',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/address',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 64
  },
  level: 'error',
  message: 'HTTP POST /api/address',
  timestamp: '2024-03-28T17:27:32.549Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:53037',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 63
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:31:34.749Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53041',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:31:34.777Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53043',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T17:31:34.782Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:53045',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 8
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:31:34.799Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53047',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:31:34.806Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53049',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T17:31:34.812Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53051',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:31:34.818Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53053',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T17:31:34.822Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:53073',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 67
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:32:59.772Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53077',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:32:59.800Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53079',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T17:32:59.805Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53083',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:32:59.823Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53085',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T17:32:59.829Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53087',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:32:59.835Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53089',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T17:32:59.840Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53205',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:37:24.308Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53211',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '93',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:37:24.330Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53215',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:37:24.351Z'
}
{
  meta: {
    req: {
      url: '/api/orders/39',
      headers: {
        host: '127.0.0.1:53217',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/39',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 48
  },
  level: 'error',
  message: 'HTTP DELETE /api/orders/39',
  timestamp: '2024-03-28T17:37:24.413Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53321',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:45:02.151Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53327',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '93',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:45:02.177Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53331',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:45:02.197Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:53344',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 66
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:45:13.755Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53348',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:45:13.780Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53350',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T17:45:13.784Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:53352',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 6
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:45:13.798Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53354',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:45:13.810Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53356',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T17:45:13.819Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53358',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:45:13.828Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53360',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T17:45:13.833Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53482',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:46:57.490Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53488',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '93',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:46:57.510Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53492',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:46:57.527Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:53559',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 67
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:47:07.214Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53563',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:47:07.240Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53565',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T17:47:07.245Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:53567',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 7
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:47:07.258Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53569',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:47:07.265Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53571',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T17:47:07.270Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53573',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:47:07.275Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53575',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T17:47:07.280Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:53603',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T17:47:47.861Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:53612',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T17:47:47.883Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:53614',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T17:47:47.883Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:53624',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T17:47:47.902Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:53626',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T17:47:47.905Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:53632',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T17:47:47.916Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:53636',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T17:47:47.925Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:53642',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '110',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T17:47:47.940Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:53599',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 109
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:47:47.951Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:53646',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T17:47:47.959Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53652',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:47:47.989Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53654',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T17:47:47.992Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:53656',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:47:48.003Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53658',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:47:48.009Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53660',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T17:47:48.013Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53662',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:47:48.018Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53664',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T17:47:48.021Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:53694',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T17:47:59.619Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:53696',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T17:47:59.623Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:53700',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T17:47:59.629Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:53710',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T17:47:59.644Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:53713',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T17:47:59.646Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:53719',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '110',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T17:47:59.653Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:53724',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T17:47:59.664Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:53726',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T17:47:59.666Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:53731',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T17:47:59.672Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:53691',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 105
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:47:59.711Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53738',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:47:59.742Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53740',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T17:47:59.746Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:53742',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:47:59.757Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53744',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:47:59.761Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53746',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T17:47:59.765Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53748',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:47:59.770Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53750',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T17:47:59.773Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:53895',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T17:57:12.427Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:53897',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T17:57:12.429Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:53908',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T17:57:12.450Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:53909',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T17:57:12.449Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:53917',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T17:57:12.465Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:53916',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T17:57:12.466Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:53928',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T17:57:12.508Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:53934',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '110',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T17:57:12.526Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:53938',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T17:57:12.542Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:53949',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 79
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:57:12.812Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53953',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T17:57:12.838Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53955',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T17:57:12.841Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:53957',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T17:57:12.850Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53959',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T17:57:12.855Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53961',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T17:57:12.858Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:53963',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T17:57:12.867Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:53965',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T17:57:12.870Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54311',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T18:05:03.716Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54312',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T18:05:03.719Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54322',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T18:05:03.732Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54329',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T18:05:03.738Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54332',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T18:05:03.741Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54340',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '110',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T18:05:03.754Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54342',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T18:05:03.757Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54344',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T18:05:03.759Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54352',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T18:05:03.771Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:54316',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 98
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:05:03.818Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54358',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:05:03.850Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:54360',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:05:03.854Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:54362',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:05:03.864Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54364',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:05:03.869Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:54366',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:05:03.873Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54368',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:05:03.878Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:54370',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:05:03.882Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54412',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T18:05:43.875Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54414',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T18:05:43.881Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54418',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 4
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T18:05:43.885Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54428',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T18:05:43.897Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54432',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T18:05:43.901Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54436',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '110',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T18:05:43.908Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54442',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T18:05:43.916Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54444',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T18:05:43.920Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54449',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T18:05:43.926Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54456',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:05:43.944Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54462',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '93',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:05:43.963Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54466',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:05:43.979Z'
}
{
  meta: {
    req: {
      url: '/api/orders/57',
      headers: {
        host: '127.0.0.1:54468',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/57',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 43
  },
  level: 'error',
  message: 'HTTP DELETE /api/orders/57',
  timestamp: '2024-03-28T18:05:44.026Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54489',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T18:06:11.210Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54499',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T18:06:11.230Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54500',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T18:06:11.230Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54515',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T18:06:11.249Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54517',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '110',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T18:06:11.251Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54523',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T18:06:11.267Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54531',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T18:06:11.306Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54532',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:06:11.307Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54543',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T18:06:11.323Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54545',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '93',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:06:11.325Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54551',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T18:06:11.337Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54554',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:06:11.343Z'
}
{
  meta: {
    req: {
      url: '/api/orders/59',
      headers: {
        host: '127.0.0.1:54557',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/59',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 44
  },
  level: 'error',
  message: 'HTTP DELETE /api/orders/59',
  timestamp: '2024-03-28T18:06:11.390Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54582',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T18:07:16.206Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54589',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T18:07:16.224Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54592',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '110',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T18:07:16.229Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54601',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T18:07:16.245Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54603',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T18:07:16.249Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54605',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T18:07:16.252Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54614',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T18:07:16.265Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54619',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T18:07:16.273Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54623',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T18:07:16.291Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:54634',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 78
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:07:16.576Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54638',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:07:16.606Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:54640',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:07:16.609Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:54642',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:07:16.618Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54644',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:07:16.623Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:54646',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:07:16.627Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54648',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:07:16.631Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54686',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T18:08:29.686Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54694',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T18:08:29.703Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54696',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T18:08:29.705Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54698',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T18:08:29.707Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54710',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T18:08:29.723Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54713',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T18:08:29.726Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54712',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '110',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T18:08:29.727Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54722',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T18:08:29.742Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54724',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T18:08:29.744Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:54683',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 103
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:08:29.781Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54732',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:08:29.816Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:54734',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:08:29.820Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:54736',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:08:29.829Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54738',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:08:29.834Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:54740',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:08:29.838Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54742',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:08:29.842Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:54744',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:08:29.845Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54795',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T18:10:09.152Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54797',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T18:10:09.159Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54808',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T18:10:09.175Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54812',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T18:10:09.183Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54818',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T18:10:09.194Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54823',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T18:10:09.202Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54825',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T18:10:09.208Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54833',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '110',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T18:10:09.229Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54837',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T18:10:09.245Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:54848',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 81
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:10:09.646Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54852',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:10:09.678Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:54854',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:10:09.682Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:54856',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:10:09.693Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54858',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:10:09.698Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:54860',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:10:09.702Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54862',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:10:09.708Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:54864',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:10:09.711Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54897',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T18:11:50.388Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54901',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T18:11:50.397Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54902',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T18:11:50.398Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54913',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '111',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T18:11:50.412Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54918',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T18:11:50.420Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54921',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T18:11:50.420Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:54927',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T18:11:50.432Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:54930',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T18:11:50.438Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54933',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T18:11:50.440Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:54946',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 80
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:11:50.766Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54950',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:11:50.792Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:54952',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:11:50.795Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:54954',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:11:50.805Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54956',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:11:50.809Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:54958',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:11:50.813Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:54960',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:11:50.817Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:54962',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:11:50.823Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:54994',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T18:13:06.030Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:55004',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T18:13:06.049Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:55006',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T18:13:06.054Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:55008',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T18:13:06.057Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:55018',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T18:13:06.068Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:55022',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T18:13:06.076Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:55026',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '111',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T18:13:06.078Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:55032',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T18:13:06.090Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:55034',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T18:13:06.094Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:55047',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 52
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:13:06.354Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55051',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:13:06.376Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55053',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:13:06.379Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:55055',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:13:06.388Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55057',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:13:06.393Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55059',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:13:06.400Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55061',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:13:06.405Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55063',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:13:06.408Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:55412',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T18:23:08.583Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:55420',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T18:23:08.603Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:55427',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T18:23:08.620Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:55429',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T18:23:08.626Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:55438',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T18:23:08.643Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:55440',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T18:23:08.647Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:55448',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '111',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T18:23:08.661Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:55450',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T18:23:08.663Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:55456',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T18:23:08.678Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:55467',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 52
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:23:08.948Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55471',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:23:08.970Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55473',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:23:08.973Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:55475',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:23:08.983Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55477',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:23:08.988Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55479',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:23:08.992Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55481',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:23:08.997Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55483',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:23:09.000Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:55767',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 57
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:34:15.941Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55771',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:34:15.964Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55773',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:34:15.968Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:55775',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 7
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:34:15.981Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55777',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:34:15.990Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55779',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:34:15.995Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55781',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:34:16.001Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55783',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:34:16.006Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:55794',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 56
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:34:23.543Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55798',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:34:23.566Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55800',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:34:23.570Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:55802',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 6
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:34:23.584Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55804',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:34:23.590Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55806',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:34:23.595Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55808',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:34:23.601Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55810',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:34:23.606Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:55819',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 55
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:34:33.247Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55823',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:34:33.304Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55825',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:34:33.318Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:55827',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 7
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:34:33.344Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55829',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:34:33.358Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55831',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:34:33.376Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55833',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:34:33.394Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55835',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:34:33.407Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:55852',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 63
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:34:48.181Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55856',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:34:48.206Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55858',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:34:48.212Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:55860',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 9
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:34:48.232Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55862',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:34:48.243Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55864',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:34:48.251Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:55866',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:34:48.266Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:55868',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:34:48.273Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:56261',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 57
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:39:57.366Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56265',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:39:57.387Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56267',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:39:57.391Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:56269',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 5
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:39:57.404Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56271',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:39:57.410Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56273',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:39:57.415Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56275',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:39:57.421Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56277',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:39:57.425Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:56299',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 56
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:41:20.741Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56303',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:41:20.763Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56305',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:41:20.767Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:56307',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 6
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:41:20.780Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56309',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:41:20.786Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56311',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:41:20.791Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56313',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:41:20.797Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56315',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:41:20.801Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:56557',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 60
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:45:44.575Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56561',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:45:44.599Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56563',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:45:44.604Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56567',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:45:44.620Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56569',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:45:44.624Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56571',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:45:44.630Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56573',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:45:44.634Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56592',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:46:16.437Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56596',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:46:16.448Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56600',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:46:16.465Z'
}
{
  meta: {
    req: {
      url: '/api/orders/87',
      headers: {
        host: '127.0.0.1:56602',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/87',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 38
  },
  level: 'error',
  message: 'HTTP DELETE /api/orders/87',
  timestamp: '2024-03-28T18:46:16.507Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:56627',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T18:46:51.057Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:56630',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T18:46:51.064Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:56638',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '111',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T18:46:51.077Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:56642',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T18:46:51.083Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:56649',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T18:46:51.094Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:56654',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T18:46:51.100Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:56657',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T18:46:51.110Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:56668',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T18:46:51.128Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:56673',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T18:46:51.143Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56679',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:46:51.155Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56683',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '94',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:46:51.164Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56687',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:46:51.179Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:56715',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T18:47:20.623Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:56723',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T18:47:20.641Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:56727',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T18:47:20.654Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:56731',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T18:47:20.660Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:56741',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T18:47:20.676Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:56747',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T18:47:20.695Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:56751',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T18:47:20.705Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:56761',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '111',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T18:47:20.724Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:56765',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T18:47:20.738Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:56757',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 60
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:47:20.771Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:56771',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '95',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:47:20.800Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56773',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:47:20.809Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56775',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:47:20.812Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56777',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:47:20.817Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56779',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:47:20.821Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56781',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:47:20.826Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56783',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:47:20.830Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:56799',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T18:47:29.754Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:56807',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T18:47:29.774Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:56811',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T18:47:29.790Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:56822',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T18:47:29.817Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:56829',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T18:47:29.826Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:56834',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T18:47:29.835Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:56841',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '111',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T18:47:29.846Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:56843',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T18:47:29.851Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:56849',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T18:47:29.862Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:56825',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '96',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 67
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:47:29.885Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:56855',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '96',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:47:29.912Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56857',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:47:29.921Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56859',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:47:29.924Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56861',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:47:29.929Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56863',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:47:29.933Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56865',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:47:29.937Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56867',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:47:29.941Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:56890',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T18:48:22.794Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:56897',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '111',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T18:48:22.817Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:56903',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T18:48:22.835Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:56904',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T18:48:22.834Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:56914',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T18:48:22.851Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:56916',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T18:48:22.854Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:56924',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T18:48:22.870Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:56926',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T18:48:22.870Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:56932',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T18:48:22.886Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:56943',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '96',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 53
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:48:23.226Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:56947',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '96',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:48:23.249Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56949',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:48:23.257Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56951',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:48:23.261Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56953',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:48:23.265Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56955',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:48:23.272Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:56957',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:48:23.278Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:56959',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:48:23.281Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:57023',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T18:53:10.502Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:57033',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T18:53:10.520Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:57039',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T18:53:10.533Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:57042',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T18:53:10.539Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:57051',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T18:53:10.552Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:57053',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T18:53:10.554Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:57062',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T18:53:10.570Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:57065',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '111',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T18:53:10.571Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:57073',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T18:53:10.586Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:57071',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 56
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:53:10.635Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:57079',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 4
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:53:10.662Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57081',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:53:10.671Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57083',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:53:10.675Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57085',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:53:10.680Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57087',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:53:10.684Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57089',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:53:10.689Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57091',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:53:10.692Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:57205',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T18:57:07.735Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:57213',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '111',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T18:57:07.755Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:57216',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T18:57:07.760Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:57223',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T18:57:07.772Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:57228',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T18:57:07.781Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:57231',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T18:57:07.780Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:57239',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T18:57:07.796Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:57240',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T18:57:07.801Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:57247',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T18:57:07.817Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:57258',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 54
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:57:08.063Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:57262',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 3
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T18:57:08.089Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57264',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T18:57:08.097Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57266',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T18:57:08.100Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57268',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T18:57:08.104Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57270',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T18:57:08.108Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57272',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T18:57:08.112Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57274',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T18:57:08.115Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:57618',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T19:06:22.602Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:57625',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T19:06:22.616Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:57627',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T19:06:22.620Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:57637',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T19:06:22.637Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:57639',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '111',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T19:06:22.636Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:57645',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T19:06:22.648Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:57648',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T19:06:22.655Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:57655',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T19:06:22.670Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:57659',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T19:06:22.685Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:57670',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 53
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:06:22.960Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:57674',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 7
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:06:22.987Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57676',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T19:06:22.997Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57678',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T19:06:23.000Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57680',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T19:06:23.005Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57682',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T19:06:23.009Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57684',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T19:06:23.013Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57686',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T19:06:23.016Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:57709',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/products/1000',
  timestamp: '2024-03-28T19:07:27.791Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:57712',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/customer/1000',
  timestamp: '2024-03-28T19:07:27.800Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:57715',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/address/1000',
  timestamp: '2024-03-28T19:07:27.805Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:57722',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '65',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/products/1000',
  timestamp: '2024-03-28T19:07:27.813Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:57730',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '50',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/customer/1000',
  timestamp: '2024-03-28T19:07:27.820Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:57733',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '111',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/address/1000',
  timestamp: '2024-03-28T19:07:27.828Z'
}
{
  meta: {
    req: {
      url: '/api/products/1000',
      headers: {
        host: '127.0.0.1:57737',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/products/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/products/1000',
  timestamp: '2024-03-28T19:07:27.833Z'
}
{
  meta: {
    req: {
      url: '/api/customer/1000',
      headers: {
        host: '127.0.0.1:57743',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/customer/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/customer/1000',
  timestamp: '2024-03-28T19:07:27.839Z'
}
{
  meta: {
    req: {
      url: '/api/address/1000',
      headers: {
        host: '127.0.0.1:57746',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/address/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/address/1000',
  timestamp: '2024-03-28T19:07:27.846Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:57760',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 49
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:07:28.146Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57762',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T19:07:28.154Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57764',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T19:07:28.158Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57766',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T19:07:28.164Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57768',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T19:07:28.168Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57770',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T19:07:28.173Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57772',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T19:07:28.176Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:57787',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 50
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:07:46.904Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57789',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T19:07:46.916Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57791',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T19:07:46.920Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57793',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T19:07:46.925Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57795',
        'accept-encoding': 'gzip, deflate',
        connection: 'close',
        'content-length': '0'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T19:07:46.930Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57797',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T19:07:46.936Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57799',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T19:07:46.941Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:57820',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 47
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:08:20.427Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57822',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T19:08:20.436Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57824',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T19:08:20.440Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57826',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '96',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T19:08:20.446Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57828',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '96',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T19:08:20.451Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57830',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T19:08:20.456Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57832',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T19:08:20.461Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:57899',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 61
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:12:51.976Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:57903',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 6
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:12:52.002Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57905',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T19:12:52.011Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57907',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T19:12:52.015Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57909',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '96',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T19:12:52.022Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57911',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '96',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T19:12:52.026Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57913',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T19:12:52.032Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57915',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T19:12:52.036Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:57977',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 56
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:15:37.463Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:57981',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 6
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:15:37.489Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57983',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T19:15:37.498Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57985',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T19:15:37.503Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57987',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '96',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T19:15:37.509Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57989',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '96',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T19:15:37.514Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:57991',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T19:15:37.519Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:57993',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T19:15:37.524Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:58256',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 86
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:19:45.117Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:58278',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 56
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:20:41.762Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:58282',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '97',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 6
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:20:41.789Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58284',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T19:20:41.798Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:58286',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T19:20:41.803Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58288',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '96',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T19:20:41.810Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:58290',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '96',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T19:20:41.815Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58292',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T19:20:41.822Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:58294',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T19:20:41.826Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:58396',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '184',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:26:26.175Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58398',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T19:26:26.185Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:58400',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/undefined',
  timestamp: '2024-03-28T19:26:26.190Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58402',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T19:26:26.195Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:58404',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/undefined',
  timestamp: '2024-03-28T19:26:26.200Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58406',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T19:26:26.206Z'
}
{
  meta: {
    req: {
      url: '/api/orders/undefined',
      headers: {
        host: '127.0.0.1:58408',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/undefined',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/undefined',
  timestamp: '2024-03-28T19:26:26.211Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:58426',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '184',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:27:05.639Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58428',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T19:27:05.648Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58432',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T19:27:05.659Z'
}
{
  meta: {
    req: {
      url: '/api/orders/115',
      headers: {
        host: '127.0.0.1:58434',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/115',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/115',
  timestamp: '2024-03-28T19:27:05.664Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58436',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T19:27:05.671Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:58450',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '184',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:27:12.772Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58452',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T19:27:12.782Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58456',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T19:27:12.792Z'
}
{
  meta: {
    req: {
      url: '/api/orders/116',
      headers: {
        host: '127.0.0.1:58458',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/116',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/116',
  timestamp: '2024-03-28T19:27:12.797Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58460',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T19:27:12.803Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:58606',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '184',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:34:16.880Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58608',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T19:34:16.889Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58612',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '77',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T19:34:16.900Z'
}
{
  meta: {
    req: {
      url: '/api/orders/117',
      headers: {
        host: '127.0.0.1:58614',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/117',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/117',
  timestamp: '2024-03-28T19:34:16.905Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58616',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T19:34:16.911Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:58633',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '184',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:34:39.156Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58635',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T19:34:39.165Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58639',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '77',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T19:34:39.175Z'
}
{
  meta: {
    req: {
      url: '/api/orders/118',
      headers: {
        host: '127.0.0.1:58641',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/118',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/118',
  timestamp: '2024-03-28T19:34:39.180Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58643',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T19:34:39.187Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:58889',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '184',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:43:38.848Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58891',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T19:43:38.857Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58895',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '77',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T19:43:38.868Z'
}
{
  meta: {
    req: {
      url: '/api/orders/121',
      headers: {
        host: '127.0.0.1:58897',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/121',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/121',
  timestamp: '2024-03-28T19:43:38.873Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:58899',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T19:43:38.879Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.37.0',
        accept: '*/*',
        'postman-token': 'efa5022a-b812-4212-b445-99a76653e2ad',
        host: 'localhost:3005',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '141'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 66
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:54:38.234Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.37.0',
        accept: '*/*',
        'postman-token': 'f6f80032-14ab-4799-be7b-35214515dcbe',
        host: 'localhost:3005',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '141'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 500 },
    responseTime: 32
  },
  level: 'error',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T19:55:40.249Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:59501',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '184',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T20:01:13.604Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:59503',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T20:01:13.613Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:59507',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T20:01:13.623Z'
}
{
  meta: {
    req: {
      url: '/api/orders/125',
      headers: {
        host: '127.0.0.1:59509',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/125',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/125',
  timestamp: '2024-03-28T20:01:13.628Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:59511',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T20:01:13.634Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1',
      headers: {
        'content-type': 'application/json',
        'user-agent': 'PostmanRuntime/7.37.0',
        accept: '*/*',
        'postman-token': '14546e9d-c938-4925-be49-f549ee838f9c',
        host: 'localhost:3005',
        'accept-encoding': 'gzip, deflate, br',
        connection: 'keep-alive',
        'content-length': '139'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 4
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1',
  timestamp: '2024-03-28T20:03:17.665Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:59658',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '184',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T20:04:21.550Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:59660',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T20:04:21.560Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:59664',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T20:04:21.572Z'
}
{
  meta: {
    req: {
      url: '/api/orders/126',
      headers: {
        host: '127.0.0.1:59666',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/126',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/126',
  timestamp: '2024-03-28T20:04:21.577Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:59668',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T20:04:21.583Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:59721',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '184',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T20:06:59.248Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:59723',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T20:06:59.259Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:59727',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T20:06:59.271Z'
}
{
  meta: {
    req: {
      url: '/api/orders/129',
      headers: {
        host: '127.0.0.1:59729',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/129',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/129',
  timestamp: '2024-03-28T20:06:59.277Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:59731',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T20:06:59.284Z'
}
{
  meta: {
    req: {
      url: '/api/orders',
      headers: {
        host: '127.0.0.1:59924',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '184',
        connection: 'close'
      },
      method: 'POST',
      httpVersion: '1.1',
      originalUrl: '/api/orders',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP POST /api/orders',
  timestamp: '2024-03-28T20:12:43.740Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:59926',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 4
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T20:12:43.763Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:59930',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T20:12:43.792Z'
}
{
  meta: {
    req: {
      url: '/api/orders/130',
      headers: {
        host: '127.0.0.1:59932',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/130',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/130',
  timestamp: '2024-03-28T20:12:43.808Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:59934',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T20:12:43.825Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:59995',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T20:14:51.574Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:59999',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T20:14:51.603Z'
}
{
  meta: {
    req: {
      url: '/api/orders/131',
      headers: {
        host: '127.0.0.1:60001',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/131',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/131',
  timestamp: '2024-03-28T20:14:51.621Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60003',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T20:14:51.637Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60017',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T20:15:18.855Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60021',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T20:15:18.883Z'
}
{
  meta: {
    req: {
      url: '/api/orders/132',
      headers: {
        host: '127.0.0.1:60023',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '174',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/132',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/132',
  timestamp: '2024-03-28T20:15:18.901Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60025',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T20:15:18.918Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60051',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T20:16:49.063Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60055',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '78',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T20:16:49.094Z'
}
{
  meta: {
    req: {
      url: '/api/orders/133',
      headers: {
        host: '127.0.0.1:60057',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '78',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/133',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/133',
  timestamp: '2024-03-28T20:16:49.111Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60059',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T20:16:49.128Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60139',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T20:20:42.331Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60143',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '78',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 1
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T20:20:42.361Z'
}
{
  meta: {
    req: {
      url: '/api/orders/134',
      headers: {
        host: '127.0.0.1:60147',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '78',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/134',
      query: {}
    },
    res: { statusCode: 400 },
    responseTime: 0
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/134',
  timestamp: '2024-03-28T20:20:42.379Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60149',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T20:20:42.396Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60178',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T20:21:45.584Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60182',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '96',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T20:21:45.615Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60186',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T20:21:45.652Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60203',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 4
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T20:22:01.527Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60207',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '96',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T20:22:01.559Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60211',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 2
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T20:22:01.597Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60225',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'GET',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP GET /api/orders/1000',
  timestamp: '2024-03-28T20:22:11.882Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60229',
        'accept-encoding': 'gzip, deflate',
        'content-type': 'application/json',
        'content-length': '96',
        connection: 'close'
      },
      method: 'PUT',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP PUT /api/orders/1000',
  timestamp: '2024-03-28T20:22:11.911Z'
}
{
  meta: {
    req: {
      url: '/api/orders/1000',
      headers: {
        host: '127.0.0.1:60233',
        'accept-encoding': 'gzip, deflate',
        connection: 'close'
      },
      method: 'DELETE',
      httpVersion: '1.1',
      originalUrl: '/api/orders/1000',
      query: {}
    },
    res: { statusCode: 404 },
    responseTime: 3
  },
  level: 'warn',
  message: 'HTTP DELETE /api/orders/1000',
  timestamp: '2024-03-28T20:22:11.949Z'
}
